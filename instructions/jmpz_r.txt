jmpz # NAME
x x # register, immediate value
D3 # 0xA0 is the commands representation in the OP-CODE

# Load the next address into the memory address pointer
PC_OUT
MEM_ADDR_PTR_IN

@STAGE	# Load the instruction into the instruction register, increment the program counter by 4B
PC_INC
MEM_OUT
INSTR_IN
# Please note that up to now, THIS IS NOT THE CORRECT INSTRUCTION, as the loading stage always comes from the last instruction, this will, however, be exected until this stage in the next round.
@STAGE # Set zero flag
CAL_REG_A_OUT
ZF_IN

@STAGE # no ZF, don't jump
RESET_MICRO

@VERSION
@ZF
CAL_REG_B_OUT # The addressed ('called') register from the first argument
PC_IN
RESET_MICRO # go back to zero to load the next instruction
